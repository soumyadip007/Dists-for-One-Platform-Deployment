{"version":3,"sources":["utils/gqlClient.ts","hooks/useMyAppsAPI.ts","utils/gql-queries/my-apps.ts","components/AppCard.tsx","components/Loader.tsx","components/AppIndex.tsx","context/AppContext.tsx","hooks/useAppAPI.ts","utils/gql-queries/app-by-appid.ts","components/Sidebar.tsx","components/AppConsoleShell.tsx","components/AppOverview.tsx","components/NotFound.tsx","components/AddAppForm.tsx","utils/gql-queries/new-app.ts","components/UnderDevelopment.tsx","components/ConfigureFeedback.tsx","components/ConfigureSSI.tsx","components/ConfigureDatabase.tsx","services/app.ts","utils/gql-queries/update-app.ts","utils/gql-queries/delete-app.ts","components/AppSettings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["gqlClient","signal","query","variables","abortController","AbortController","setTimeout","abort","fetch","process","REACT_APP_API_GATEWAY","method","headers","Authorization","window","OpAuthHelper","jwtToken","body","JSON","stringify","then","res","json","catch","err","name","console","error","debug","useMyAppsAPI","useState","apps","setApps","loading","setLoading","useEffect","data","myApps","AppCard","props","app","dropDownState","setDropdownState","Card","isHoverable","isRounded","className","to","path","Title","headingLevel","description","Dropdown","toggle","KebabToggle","onToggle","isOpen","isPlain","dropdownItems","position","href","title","rel","class","Loader","EmptyState","EmptyStateIcon","variant","component","Spinner","Text","AppIndex","NewAppButton","isFullHeight","CardBody","Flex","style","height","alignItems","default","direction","justifyContent","FlexItem","spacer","size","Stack","hasGutter","StackItem","isFilled","Grid","span","GridItem","map","appId","DropdownItem","id","AppContext","createContext","AppContextProvider","useParams","router","useHistory","location","useLocation","setApp","useAppAPI","setOriginalApp","Provider","value","newAppId","newPath","pathname","replace","search","hash","push","forceRefreshApp","newApp","children","Sidebar","useContext","appMenuOptions","setAppMenuOptions","appsListOpen","setAppsListOpen","tapp","OptionsMenuItem","isSelected","onSelect","appsMenuToggle","OptionsMenuToggle","toggleTemplate","isNavItemActive","endsWith","Nav","theme","OptionsMenu","menuItems","display","Button","width","NavList","NavItem","isActive","index","AppConsoleShell","xl","AppOverview","history","disabled","services","flex","alignSelf","target","Menu","service","MenuItem","onClick","actions","MenuItemAction","icon","Switch","isDisabled","aria-label","isChecked","onChange","NotFound","AppAppForm","emptyAppObject","setIsOpen","handleModalClose","searchParams","URLSearchParams","delete","toString","get","Modal","onClose","showClose","Form","noValidate","onSubmitCapture","event","preventDefault","OpNotification","success","subject","danger","FormGroup","label","isRequired","fieldId","helperText","TextInput","type","aria-describedby","validated","placeholder","TextArea","ActionGroup","UnderDevelopment","ConfigureFeedback","ConfigureSSI","ConfigureDatabase","updateAppService","updatedApp","a","pick","errors","updateApp","errMessage","message","join","Error","deleteAppService","deletApp","deleteApp","AppSettings","editableApp","setEditableApp","isDeleteModalOpen","setDeleteModalOpen","deleteAppConfirmation","setDeleteAppConformation","onSubmit","onReset","CardFooter","isFlat","border","overflow","CardTitle","boxShadow","MenuContent","MenuList","itemId","actionId","titleIconVariant","autoFocus","val","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","onLogin","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2616c6c5.chunk.js","sourcesContent":["type GQLRequestProps = {\n  query: string;\n  variables?: any;\n  operationName?: any;\n};\n\nexport default function gqlClient ( { query, variables }: GQLRequestProps, signal?: any ) {\n  if ( !signal ) {\n    const abortController = new AbortController();\n    signal = abortController.signal;\n    setTimeout( () => {\n      abortController.abort();\n    }, 5000 );\n  }\n\n  return fetch( process.env.REACT_APP_API_GATEWAY, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${window.OpAuthHelper?.jwtToken}`\n    },\n    body: JSON.stringify( {\n      query,\n      variables\n    } ),\n    signal,\n  } )\n    .then( res => res.json() )\n    .catch( ( err: Error ) => {\n      if ( err.name === 'AbortError' ) {\n        console.debug( '[GQLClient]: Request aborted' );\n        return;\n      }\n      console.error( `[GQLClientError]: ${ err }` );\n      throw err;\n    } );\n};\n","import { useEffect, useState } from 'react';\nimport { myApps } from '../utils/gql-queries';\nimport gqlClient from '../utils/gqlClient';\n\nexport default function useMyAppsAPI () {\n  const [ apps, setApps ] = useState<any[]>( [] );\n  const [ loading, setLoading ] = useState<boolean>( true );\n\n  useEffect( () => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    gqlClient( { query: myApps }, signal )\n      .then( res => {\n        if ( !res || !res.data ) {\n          setLoading( false );\n          return;\n        }\n        setApps( res.data.myApps );\n        setLoading( false );\n      } );\n\n    return () => abortController.abort();\n  }, [] );\n\n  return { apps, loading };\n}\n","export const myApps = /* GraphQL */`\nquery AppsList {\n  myApps {\n    id\n    appId\n    name\n    path\n    description\n    ownerId\n    isActive\n    updatedOn\n  }\n}`;\n","import { Card, Dropdown, KebabToggle, Title } from '@patternfly/react-core';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IAppCardProps {\n  app: any;\n  dropdownItems: any[]\n}\n\nfunction AppCard (props: IAppCardProps) {\n  const { app } = props;\n  const [dropDownState, setDropdownState] = useState( false );\n\n  return (\n    <>\n      <Card isHoverable isRounded className=\"app-card\">\n        <section className=\"app-card--body\">\n          <Link to={app.path || ''}><Title headingLevel='h2'>{ app.name }</Title></Link>\n          <p className=\"app-card--body__description\">{ app.description }</p>\n        </section>\n        <aside className=\"app-card--dropdown\">\n          <Dropdown\n            toggle={ <KebabToggle onToggle={ () => setDropdownState( !dropDownState) } /> }\n            isOpen={ dropDownState }\n            isPlain\n            dropdownItems={ props.dropdownItems }\n            position={ 'right' }\n          />\n        </aside>\n        <footer className=\"app-card--footer pf-u-display-flex pf-u-justify-content-space-between\">\n          <p>Path: <strong>{ app.path }</strong></p>\n          <a href={ app.path } title={ app.name } rel=\"noopener\">\n            View App\n            <ion-icon class=\"ion-icon\" name=\"open-outline\"></ion-icon>\n          </a>\n        </footer>\n      </Card>\n    </>\n  );\n}\n\nexport default AppCard;\n","import { EmptyState, EmptyStateIcon, Spinner, Text } from '@patternfly/react-core';\n\nexport default function Loader () {\n  return (\n    <EmptyState>\n      <EmptyStateIcon\n        variant=\"container\"\n        component={ Spinner }\n      ></EmptyStateIcon>\n      <Text>Loading...</Text>\n    </EmptyState>\n  );\n}\n","import { Card, CardBody, DropdownItem, Flex, FlexItem, Grid, GridItem, Stack, StackItem, Text, Title } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport useMyAppsAPI from '../hooks/useMyAppsAPI';\nimport AppCard from './AppCard';\nimport Loader from './Loader';\nimport './AppIndex.css'\n\nfunction AppIndex () {\n  const { apps, loading } = useMyAppsAPI();\n\n  const cardDropdownItems = (appId: string) => [\n    <DropdownItem key='edit' href={ process.env.PUBLIC_URL + '/' + appId + '/settings' }>Edit App</DropdownItem>,\n    <DropdownItem key='delete' className=\"pf-u-danger-color-100\" href={ process.env.PUBLIC_URL + '/' + appId + '/settings?action=delete' }>Delete App</DropdownItem>,\n  ];\n\n  function NewAppButton () {\n    return <Link to=\"/?new=true\">\n      <Card isPlain isRounded isFullHeight className=\"new-app--card\">\n        <CardBody>\n          <Flex\n            style={ { height: '100%' } }\n            alignItems={ { default: 'alignItemsCenter' } }\n            direction={ { default: 'column' } }\n            justifyContent={ { default: 'justifyContentCenter' } }>\n            <FlexItem spacer={ { default: 'spacerNone' } }>\n              <ion-icon name=\"add-outline\" size=\"large\"></ion-icon>\n            </FlexItem>\n            <FlexItem>\n              <Text>Create new App</Text>\n            </FlexItem>\n          </Flex>\n        </CardBody>\n      </Card>\n    </Link>;\n  }\n\n  return (\n    <>\n      <main className=\"container\">\n        <Stack hasGutter>\n          <StackItem>\n            <Title headingLevel=\"h1\" className=\"pf-u-text-align-center\">My Projects</Title>\n          </StackItem>\n          { loading\n            ? <Loader />\n            : <StackItem isFilled>\n              <Grid hasGutter span={ 4 }>\n                <GridItem><NewAppButton/></GridItem>\n                { apps.map( app =>\n                  <GridItem key={app.id}>\n                    <AppCard\n                      app={app}\n                      dropdownItems={ cardDropdownItems(app.appId) } />\n                  </GridItem>\n                ) }\n              </Grid>\n            </StackItem>\n          }\n        </Stack>\n      </main>\n    </>\n  )\n}\n\nexport default AppIndex;\n","import { createContext } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { useLocation } from 'react-router-dom';\nimport useAppAPI from '../hooks/useAppAPI';\n\nexport const AppContext = createContext<any>( {} );\n\nexport default function AppContextProvider ( props: any ) {\n  const { appId } = useParams<any>();\n  const router = useHistory();\n  const location = useLocation();\n\n  const { app, loading, setApp: setOriginalApp } = useAppAPI(appId);\n\n  const setApp = (newAppId: string) => {\n    const newPath = location.pathname.replace( appId, newAppId ) + location.search + location.hash;\n    router.push( newPath );\n  }\n\n  const forceRefreshApp = ( newApp: any ) => {\n    setOriginalApp( { ...app, ...newApp} );\n  }\n\n  return (\n    <AppContext.Provider value={ { app, loading, setApp, forceRefreshApp }}>\n      {props.children}\n    </AppContext.Provider>\n  )\n}\n","import { useEffect, useState } from 'react';\nimport { appByAppId } from '../utils/gql-queries/app-by-appid';\nimport gqlClient from '../utils/gqlClient';\n\nexport default function useAppAPI ( appId: string ) {\n  const [ app, setApp ] = useState<any>( {} );\n  const [ loading, setLoading ] = useState<boolean>( true );\n\n  useEffect( () => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    setLoading( true );\n\n    gqlClient( { query: appByAppId, variables: { appId } }, signal )\n      .then( res => {\n        if ( !res?.data?.app ) {\n          setLoading( false );\n          return;\n        }\n        setApp( res.data.app );\n        setLoading( false );\n      } );\n\n    return () => abortController.abort();\n  }, [ appId ] );\n\n  return { app, loading, setApp };\n}\n","export const appByAppId = /* GraphQL */`\nquery App($appId: String!) {\n  app ( appId: $appId ) {\n    id\n    name\n    path\n    description\n    ownerId\n    isActive\n    createdOn\n    createdBy\n    updatedOn\n    updatedBy\n  }\n}\n`;\n","import { Button, Nav, NavItem, NavList, OptionsMenu, OptionsMenuItem, OptionsMenuToggle, Title } from '@patternfly/react-core';\nimport { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { AppContext } from '../context/AppContext';\nimport useMyAppsAPI from '../hooks/useMyAppsAPI';\nimport './Sidebar.css';\n\nfunction Sidebar () {\n  const { apps } = useMyAppsAPI();\n  const { app, loading, setApp } = useContext( AppContext );\n  const { appId } = useParams<any>();\n\n  const location = useLocation();\n\n  const [ appMenuOptions, setAppMenuOptions ] = useState<any[]>([]);\n\n  const [ appsListOpen, setAppsListOpen ] = useState<boolean>();\n\n  useEffect( () => {\n    setAppMenuOptions( apps.map( tapp => (\n      <OptionsMenuItem\n        key={ tapp.id }\n        id={ tapp.id }\n        isSelected={ tapp.appId === appId }\n        onSelect={ () => {setApp( tapp.appId ); setAppsListOpen( false )} }>\n        { tapp.name }\n      </OptionsMenuItem>\n    ) ) );\n  }, [ apps, appId, setApp, setAppsListOpen ] );\n\n  const appsMenuToggle = <OptionsMenuToggle onToggle={ () => {setAppsListOpen( !appsListOpen )} } toggleTemplate={ loading ? 'Loading...' : app?.name }></OptionsMenuToggle>;\n\n  const integrations = [\n    { name: 'SSI Header', path: 'ssi', },\n    { name: 'Database', path: 'database', },\n    { name: 'Feedback', path: 'feedback', },\n    { name: 'Search', path: 'search', },\n    { name: 'Notifications', path: 'notifications', },\n  ];\n\n  function isNavItemActive ( path: string ) {\n    return location.pathname.endsWith(path);\n  }\n\n  return (\n    <>\n      <Nav theme=\"light\" className=\"app-details--sidebar pf-u-box-shadow-md-right\">\n\n        {/* TODO: use context selector instead of options menu (https://www.patternfly.org/v4/components/context-selector) */}\n        <OptionsMenu\n          className=\"app-menu--list\"\n          id=\"app-list-options-menu\"\n          menuItems={ appMenuOptions }\n          isOpen={ appsListOpen }\n          toggle={appsMenuToggle} />\n\n        <Link style={{ display: 'none' }} to=\"/\"><Button id=\"test123\" width=\"100%\" variant=\"plain\"><ion-icon name=\"arrow-back-outline\"></ion-icon>&nbsp;Go Back</Button></Link>\n\n        <NavList className=\"app-details--sidebar--main-nav\">\n          <NavItem isActive={ isNavItemActive( 'overview' ) }>\n            <Link to={ 'overview' }>Overview</Link>\n          </NavItem>\n          <NavItem isActive={ isNavItemActive( 'analytics' ) }>\n            <Link to={ 'analytics' }>Analytics</Link>\n          </NavItem>\n\n          <Title headingLevel=\"h4\" className=\"app-details--sidebar--title pf-u-color-400 pf-u-px-md\">Integrations</Title>\n\n          { integrations.map( ( { name, path }, index ) => (\n            <NavItem key={index} isActive={isNavItemActive( path )}>\n              <Link to={path}>{ name }</Link>\n            </NavItem>\n          ))}\n        </NavList>\n        <NavList className=\"app-details--sidebar--settings pf-u-mt-auto\">\n          <NavItem>\n            <Link to={ 'settings' }>\n              App Settings\n              <ion-icon class=\"pf-u-ml-auto pf-u-my-auto\" name=\"settings-outline\"></ion-icon>\n            </Link>\n          </NavItem>\n        </NavList>\n        </Nav>\n    </>\n  );\n}\n\nexport default Sidebar;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport { useContext } from 'react';\nimport AppContextProvider, { AppContext } from '../context/AppContext';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\n\nfunction AppConsoleShell ( props: any ) {\n  const { loading } = useContext( AppContext );\n\n  return (\n    <>\n      <AppContextProvider>\n        <Grid hasGutter>\n          <GridItem span={ 3 } xl={2}>\n            <Sidebar />\n          </GridItem>\n          <GridItem span={ 9 } xl={10}>\n            { loading\n              ? <Loader />\n              : <main className=\"container\">\n                { props.children }\n              </main> }\n          </GridItem>\n        </Grid>\n      </AppContextProvider>\n    </>\n  )\n}\n\nexport default AppConsoleShell;\n","import { Button, Card, CardBody, Flex, FlexItem, Grid, GridItem, Menu, MenuItem, MenuItemAction, Switch, Text, Title } from '@patternfly/react-core';\nimport { useContext, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport Loader from './Loader';\nimport './AppOverview.css';\nimport { useHistory } from 'react-router-dom';\n\nfunction AppOverview () {\n  const { app, loading } = useContext( AppContext );\n  const history = useHistory();\n\n  const [services] = useState([\n    { id: 'ssi', name: 'SSI Header', path: 'ssi', isActive: false, disabled: true },\n    { id: 'database', name: 'Database', path: 'database', isActive: false, disabled: true },\n    { id: 'feedback', name: 'Feedback', path: 'feedback', isActive: false, disabled: true },\n    { id: 'search', name: 'Search', path: 'search', isActive: false, disabled: true },\n    { id: 'notifications', name: 'Notifications', path: 'notifications', isActive: false, disabled: true },\n  ] );\n\n  if ( loading ) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <Grid hasGutter>\n        <GridItem span={ 12 }>\n          <Card isRounded className=\"pf-u-box-shadow-md\">\n            <CardBody>\n              <Flex direction={ { default: 'row' } }>\n                <FlexItem flex={ { default: 'flex_1' } }>\n                  <Title headingLevel=\"h1\" className=\"pf-u-mb-sm\">{ loading ? 'Loading...' : app.name }</Title>\n                  <Flex direction={ { default: 'row' } }>\n                    {/* <FlexItem>\n                      <Text>Owner: <strong>{ app.owner }</strong></Text>\n                    </FlexItem> */}\n                    <FlexItem>\n                      <Text>Path: <strong>{ app.path }</strong></Text>\n                    </FlexItem>\n                  </Flex>\n                </FlexItem>\n                <FlexItem flex={ { default: 'flexNone' } } alignSelf={ { default: 'alignSelfCenter' } }>\n                  <a href={ app.path } target=\"_blank\" rel=\"noreferrer\">View App\n                &nbsp;<ion-icon name=\"open-outline\"></ion-icon></a>\n                </FlexItem>\n              </Flex>\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem span={ 8 }>\n          <Title headingLevel=\"h3\" className=\"pf-u-my-sm\">One Platform Services:</Title>\n          <Card isRounded>\n            <Menu className=\"app-service--list-item\">\n              { services.map( service => (\n                <MenuItem\n                  className=\"pf-u-align-items-center\"\n                  key={ service.id }\n                  // to={ app.path + '/' + service.path }\n                  onClick={ () => history.push( app.path + '/' + service.path)}\n                  isSelected={false}\n                  actions={\n                    <MenuItemAction\n                    icon={ <Switch\n                      isDisabled={true}\n                      id={ 'switch-' + service.id }\n                      aria-label={ service.name }\n                      isChecked={ service.isActive }\n                      onChange={ () => { } }/>}\n                    /> }>\n                  { service.name }\n                  </MenuItem>\n              ))}\n            </Menu>\n          </Card>\n        </GridItem>\n        <GridItem span={4}>\n          <Card isRounded>\n            <CardBody>\n              <Title headingLevel=\"h5\" className=\"pf-u-mb-sm\">SPAship Manager</Title>\n              <Text className=\"pf-u-mb-sm\">Manage your SPA deployments from SPAship manager:</Text>\n              <Button component=\"a\" variant=\"secondary\" target=\"_blank\" href={ 'https://spaship.one.redhat.com/applications' + app.path + '/details' }>View my SPA&nbsp;<ion-icon name=\"open-outline\"></ion-icon></Button>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </Grid>\n    </>\n  );\n}\n\nexport default AppOverview;\n","function NotFound () {\n  return (\n    <h1>Not Found</h1>\n  );\n}\n\nexport default NotFound;\n","import { ActionGroup, Button, Form, FormGroup, Modal, TextArea, TextInput } from '@patternfly/react-core';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport gqlClient from '../utils/gqlClient';\nimport { newApp } from '../utils/gql-queries';\n\nexport default function AppAppForm () {\n  const emptyAppObject = {\n    name: '',\n    path: '',\n    description: '',\n  };\n  const [ app, setApp ] = useState<any>(emptyAppObject);\n  const [ isOpen, setIsOpen ] = useState<boolean>();\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect( () => {\n    const searchParams = new URLSearchParams( location.search );\n    if ( searchParams.get('new') === 'true' ) {\n      setIsOpen( true );\n    } else {\n      setIsOpen( false );\n    }\n  }, [ location ] );\n\n  function handleModalClose () {\n    setIsOpen( false );\n    setApp( emptyAppObject );\n    /* Remove the new=true from the url search params */\n    const searchParams = new URLSearchParams( location.search );\n    searchParams.delete( 'new' );\n    history.push( { search: searchParams.toString() } );\n  }\n\n  function handleFormSubmit (event: any) {\n    event.preventDefault();\n    /* TODO: Form validation before submitting */\n    gqlClient( { query: newApp, variables: { app } } )\n      .then( res => {\n        if ( res?.data?.app ) {\n          window.OpNotification.success( { subject: 'App Created Succssfully!' } );\n          history.push( res.data.app.appId );\n        }\n      } ).catch( err => {\n        window.OpNotification.danger( { subject: 'An error occured when deleting the App.', body: 'Please try again later.' } );\n        console.error( err );\n      });\n  }\n\n  return <>\n    <Modal\n      variant=\"small\"\n      title=\"Create a New App\"\n      isOpen={ isOpen }\n      onClose={ handleModalClose }\n      showClose={false}>\n\n      <Form noValidate={false} onSubmitCapture={handleFormSubmit}>\n        <FormGroup\n          label=\"App Name\"\n          isRequired\n          fieldId=\"app-name\"\n          helperText=\"Please provide a name for your app\">\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"app-name\"\n            name=\"app-name\"\n            aria-describedby=\"app-name-helper\"\n            validated=\"default\"\n            placeholder=\"Enter app name here...\"\n            value={ app.name }\n            onChange={ ( name ) => setApp( { ...app, name } ) } />\n        </FormGroup>\n        <FormGroup\n          label=\"App Path\"\n          isRequired\n          fieldId=\"app-path\"\n          helperText=\"Please provide the path/url for your app\">\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"app-path\"\n            name=\"app-path\"\n            aria-describedby=\"app-path-helper\"\n            validated=\"default\"\n            placeholder=\"Enter app path here...\"\n            value={ app.path }\n            onChange={ ( path ) => setApp( { ...app, path } ) } />\n        </FormGroup>\n        <FormGroup\n          label=\"App Description\"\n          fieldId=\"app-desc\"\n          helperText=\"Please provide a brief description of your app\">\n          <TextArea\n            id=\"app-desc\"\n            name=\"app-desc\"\n            aria-describedby=\"app-desc-helper\"\n            placeholder=\"Enter app description here...\"\n            value={ app.description }\n            onChange={ ( description ) => setApp( { ...app, description } ) } />\n        </FormGroup>\n\n        <ActionGroup>\n          <Button variant=\"primary\" type=\"submit\">Create App</Button>\n          <Button variant=\"link\" type=\"reset\" onClick={ handleModalClose }>Cancel</Button>\n        </ActionGroup>\n      </Form>\n    </Modal>\n  </>;\n}\n","export const newApp = /* GraphQL */`\nmutation NewApp($app: CreateAppInput!) {\n  app:createApp(app: $app) {\n    id\n    name\n    appId\n    path\n  }\n}\n`;\n","import { Card, CardBody, EmptyState, EmptyStateIcon, Title } from '@patternfly/react-core';\n\nexport default function UnderDevelopment () {\n  return (\n    <Card isPlain>\n      <CardBody>\n        <EmptyState>\n          <EmptyStateIcon\n            variant=\"container\"\n            component={\n              () => <ion-icon name=\"construct-outline\" size=\"large\"></ion-icon>\n            } />\n          <Title headingLevel=\"h2\">Under Development</Title>\n        </EmptyState>\n      </CardBody>\n    </Card>\n  );\n}\n","import { Card, CardBody, Title } from '@patternfly/react-core';\nimport UnderDevelopment from './UnderDevelopment';\n\nfunction ConfigureFeedback ( props: any ) {\n  return (\n    <>\n      <Card isRounded>\n        <CardBody>\n          <Title headingLevel=\"h1\">Configure Feedback</Title>\n        </CardBody>\n      </Card>\n\n      <UnderDevelopment/>\n    </>\n  );\n}\n\nexport default ConfigureFeedback;\n","import { Card, CardBody, Title } from '@patternfly/react-core';\nimport UnderDevelopment from './UnderDevelopment';\n\nfunction ConfigureSSI ( props: any ) {\n  return (\n    <>\n      <Card isRounded>\n        <CardBody>\n          <Title headingLevel=\"h1\">Configure SSI Header</Title>\n        </CardBody>\n      </Card>\n\n      <UnderDevelopment />\n    </>\n  );\n}\n\nexport default ConfigureSSI;\n","import { Card, CardBody, Title } from '@patternfly/react-core';\nimport UnderDevelopment from './UnderDevelopment';\n\nfunction ConfigureDatabase ( props: any ) {\n  return (\n    <>\n      <Card isRounded>\n        <CardBody>\n          <Title headingLevel=\"h1\">Configure Database</Title>\n        </CardBody>\n      </Card>\n\n      <UnderDevelopment />\n    </>\n  );\n}\n\nexport default ConfigureDatabase;\n","import { pick } from 'lodash';\nimport { deleteApp, updateApp } from '../utils/gql-queries';\nimport gqlClient from '../utils/gqlClient';\n\nexport const updateAppService = async ( updatedApp: any ) => {\n  try {\n    const app = pick( updatedApp, [ 'name', 'path', 'description' ] );\n    const res = await gqlClient( { query: updateApp, variables: { id: updatedApp.id, app } } );\n    if ( res.errors && !res?.data?.updateApp ) {\n      const errMessage = res.errors.map( ( err: any ) => err.message ).join( ', ' );\n      throw new Error( errMessage );\n    }\n    return res.data.updateApp;\n  } catch ( err ) {\n    throw err;\n  }\n}\n\nexport const deleteAppService = async ( id: string ) => {\n  try {\n    const res = await gqlClient( { query: deleteApp, variables: { id } } );\n    if ( res.errors && !res?.data?.deletApp ) {\n      const errMessage = res.errors.map( ( err: any ) => err.message ).join( ', ' );\n      throw new Error( errMessage );\n    }\n    return res.data.deleteApp;\n  } catch ( err ) {\n    throw err;\n  }\n}\n","export const updateApp = /* GraphQL */`\nmutation UpdateApp($id: ID!, $app: UpdateAppInput!) {\n  updateApp(id: $id, app: $app) {\n    id\n    name\n    appId\n    path\n    description\n  }\n}\n`;\n","export const deleteApp = /* GraphQL */`\nmutation DeleteApp($id: ID!) {\n  deleteApp(id: $id) {\n    id\n    name\n    appId\n  }\n}\n`;\n","import { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport Loader from './Loader';\nimport {\n  Card, CardTitle, CardBody, CardFooter,\n  Form, FormGroup,\n  Grid, GridItem,\n  Title, Text, TextInput, TextArea,\n  Stack, StackItem,\n  Menu, MenuContent, MenuList, MenuItem, MenuItemAction,\n  Switch, Button, Modal\n} from '@patternfly/react-core';\nimport { deleteAppService, updateAppService } from '../services/app';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nfunction AppSettings () {\n  const history = useHistory();\n  const location = useLocation();\n  const { app, loading, forceRefreshApp } = useContext( AppContext );\n  const [ editableApp, setEditableApp ] = useState( app );\n  const [ isDeleteModalOpen, setDeleteModalOpen ] = useState( false );\n  const [ deleteAppConfirmation, setDeleteAppConformation ] = useState( '' );\n\n  useEffect( () => {\n    setEditableApp( app );\n  }, [ app ] );\n\n  useEffect( () => {\n    const searchParams = new URLSearchParams( location.search );\n    if ( searchParams.get('action') === 'delete' ) {\n      setDeleteModalOpen( true );\n    } else {\n      setDeleteModalOpen( false );\n    }\n  }, [location] );\n\n  const handleResetApp = (event: any) => {\n    event.preventDefault();\n    setEditableApp( app );\n  }\n  const handleSaveApp = (event: any) => {\n    event.preventDefault();\n\n    /* TODO: Add form validation */\n\n    updateAppService( editableApp )\n      .then( updatedApp => {\n        forceRefreshApp( updatedApp );\n        window.OpNotification.success( { subject: 'App Updated Succssfully!' } );\n      } )\n      .catch( err => {\n        window.OpNotification.danger( { subject: 'An error occured when updating the App.', body: 'Please try again later.' } );\n        console.error( err );\n      } );\n  }\n\n\n  const handleAppDeactivateToggle = () => {\n    /* TODO: gqlQuery for toggling `isActive` */\n  }\n\n  const handleDeleteApp = (event: any) => {\n    event.preventDefault();\n    deleteAppService( app.id )\n      .then( () => {\n        window.OpNotification.success( { subject: 'App Deleted Succssfully!' } );\n        history.push( '/' );\n      } )\n      .catch( err => {\n        window.OpNotification.danger( { subject: 'An error occured when deleting the App.', body: 'Please try again later.' } );\n        console.error( err );\n      } );\n  }\n\n  const handleModalClose = () => {\n    /* Remove the new=true from the url search params */\n    const searchParams = new URLSearchParams( location.search );\n    searchParams.delete( 'action' );\n    history.replace( { search: searchParams.toString() } );\n    setDeleteAppConformation( '' );\n  }\n\n  if ( loading ) {\n    return <Loader />;\n  }\n  return (\n    <>\n      <Card isPlain>\n        <CardBody>\n          <Title headingLevel=\"h1\">App Settings</Title>\n        </CardBody>\n      </Card>\n      <Stack hasGutter>\n        <StackItem>\n          <Form onSubmit={ handleSaveApp } onReset={ handleResetApp }>\n            <Card isRounded>\n              <CardBody>\n                <Grid hasGutter>\n                  <GridItem>\n                    <FormGroup fieldId=\"name\" label=\"App Name\" isRequired>\n                      <TextInput\n                        id=\"name\"\n                        placeholder=\"Enter a name for your project\"\n                        value={ editableApp.name }\n                        onChange={ name => setEditableApp( { ...editableApp, name } ) }\n                        isRequired></TextInput>\n                    </FormGroup>\n                  </GridItem>\n                  <GridItem>\n                    <FormGroup fieldId=\"path\" label=\"App Path\" helperText=\"The path where your app will be hosted.\" isRequired>\n                      <TextInput\n                        id=\"path\"\n                        placeholder=\"/app-path\"\n                        value={ editableApp.path }\n                        onChange={ path => setEditableApp( { ...editableApp, path } ) }\n                        isRequired></TextInput>\n                    </FormGroup>\n                  </GridItem>\n                  <GridItem>\n                    <FormGroup fieldId=\"description\" label=\"Description\">\n                      <TextArea\n                        id=\"description\"\n                        placeholder=\"Enter a description for your project\"\n                        value={ editableApp.description }\n                        onChange={ description => setEditableApp( { ...editableApp, description } ) }></TextArea>\n                    </FormGroup>\n                  </GridItem>\n                </Grid>\n              </CardBody>\n              <CardFooter>\n                <Button variant=\"primary\" type=\"submit\">Update</Button>\n                <Button variant=\"link\" type=\"reset\">Discard</Button>\n              </CardFooter>\n            </Card>\n          </Form>\n        </StackItem>\n        <StackItem>\n          <Card isRounded isFlat style={ { border: '1px solid var(--pf-global--danger-color--100)', overflow: 'hidden'}}>\n            <CardTitle className=\"pf-u-danger-color-100\">Danger Zone</CardTitle>\n            <Menu style={ { boxShadow: 'none' } }>\n              <MenuContent>\n                <MenuList>\n                  <MenuItem\n                    isDisabled\n                    description=\"Deactivates the app from One Platform Menu and the Homepage\"\n                    itemId={ 0 }\n                    actions={\n                      <MenuItemAction\n                        actionId=\"deactivate\"\n                        icon={ <Switch\n                          isDisabled\n                          id=\"deactivate-app\"\n                          aria-label=\"Deactivate app\"\n                          isChecked={ false }\n                          value={editableApp.isActive}\n                          onClick={ handleAppDeactivateToggle } /> }\n                        aria-label=\"Deactivate the app\" />\n                    }>\n                    Deactivate App\n                    </MenuItem>\n                  <MenuItem\n                    description=\"Deletes the app from One Platform. Cannot be reverted.\"\n                    itemId={ 1 }\n                    onClick={ () => history.push({ search: 'action=delete' }) }\n                    actions={\n                      <MenuItemAction\n                        actionId=\"delete\"\n                        icon={ <ion-icon class=\"pf-u-danger-color-100\" name=\"trash\" /> }\n                        aria-label=\"Delete the app\" />\n                    }>\n                    <span className=\"pf-u-danger-color-100\">Delete this App</span>\n                  </MenuItem>\n                </MenuList>\n              </MenuContent>\n            </Menu>\n          </Card>\n        </StackItem>\n      </Stack>\n      <Modal\n        variant=\"small\"\n        isOpen={ isDeleteModalOpen }\n        aria-label=\"Delete App Modal\"\n        title=\"Are you sure?\"\n        titleIconVariant=\"danger\"\n        showClose={ true }\n        onClose={ handleModalClose }>\n        <Text>This action is irreversible and will permanently delete the <strong><em>{ app.name }</em></strong> app from One Platform.</Text>\n        <br/>\n        <Form onSubmit={ handleDeleteApp }>\n          <FormGroup fieldId=\"delete-app\" label={ `Please type \"${ app.name }\" to confirm` } isRequired>\n            <TextInput id=\"delete-app\" autoFocus onChange={ val => setDeleteAppConformation(val)} isRequired></TextInput>\n          </FormGroup>\n          <Button variant=\"danger\" type=\"submit\" isDisabled={ app.name !== deleteAppConfirmation }>I understand the consequences, delete this app</Button>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n\nexport default AppSettings;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport '@patternfly/patternfly/patternfly.css';\nimport '@patternfly/patternfly/patternfly-addons.css';\nimport './App.css';\nimport AppIndex from './components/AppIndex';\nimport AppConsoleShell from './components/AppConsoleShell';\nimport AppOverview from './components/AppOverview';\nimport NotFound from './components/NotFound';\nimport AddAppForm from './components/AddAppForm';\nimport UnderDevelopment from './components/UnderDevelopment';\nimport ConfigureFeedback from './components/ConfigureFeedback';\nimport ConfigureSSI from './components/ConfigureSSI';\nimport ConfigureDatabase from './components/ConfigureDatabase';\nimport AppSettings from './components/AppSettings';\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" component={ AppIndex } exact />\n        <Route path=\"/:appId\">\n          <AppConsoleShell>\n            <Switch>\n              <Redirect path=\"/:appId\" to=\"/:appId/overview\" exact />\n              <Route path=\"/:appId/overview\" component={ AppOverview } exact />\n              <Route path=\"/:appId/analytics\" component={ UnderDevelopment } exact />\n              <Route path=\"/:appId/ssi\" component={ ConfigureSSI } exact />\n              <Route path=\"/:appId/database\" component={ ConfigureDatabase } exact />\n              <Route path=\"/:appId/feedback\" component={ ConfigureFeedback } exact />\n              <Route path=\"/:appId/search\" component={ UnderDevelopment } exact />\n              <Route path=\"/:appId/notifications\" component={ UnderDevelopment } exact />\n              <Route path=\"/:appId/user-groups\" component={ UnderDevelopment } exact />\n              <Route path=\"/:appId/settings\" component={ AppSettings } exact />\n              <Route path=\"*\" component={ NotFound } />\n            </Switch>\n          </AppConsoleShell>\n        </Route>\n      </Switch>\n      <AddAppForm />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nif ( !window.OpAuthHelper ) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <BrowserRouter basename={ process.env.PUBLIC_URL }>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n} else {\n  window.OpAuthHelper.onLogin( () => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <BrowserRouter basename={ process.env.PUBLIC_URL }>\n          <App />\n        </BrowserRouter>\n      </React.StrictMode>,\n      document.getElementById( 'root' )\n    );\n  } );\n}\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.debug);\n"],"sourceRoot":""}
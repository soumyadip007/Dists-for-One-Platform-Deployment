(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(2),i=n(6),r=(n(0),n(153)),o={id:"notifications-get-started",title:"Getting Started with Notification Templates",sidebar_label:"Get Started with Templates",slug:"/microservices/notifications-service/get-started"},c={unversionedId:"microservices/notifications/notifications-get-started",id:"microservices/notifications/notifications-get-started",isDocsHomePage:!1,title:"Getting Started with Notification Templates",description:"*",source:"@site/docs/microservices/notifications/get-started.md",slug:"/microservices/notifications-service/get-started",permalink:"/get-started/docs/microservices/notifications-service/get-started",editUrl:"https://github.com/1-platform/one-platform/edit/master/packages/documentation-spa/docs/microservices/notifications/get-started.md",version:"current",sidebar_label:"Get Started with Templates",sidebar:"someSidebar",previous:{title:"Notifications Service",permalink:"/get-started/docs/microservices/notifications-service"},next:{title:"User/Group Service",permalink:"/get-started/docs/microservices/user-groups-service"}},l=[{value:"Step 1: Create a Notification Template",id:"step-1-create-a-notification-template",children:[]},{value:"Step 2: Sending a Notification",id:"step-2-sending-a-notification",children:[]},{value:"Additional Notes",id:"additional-notes",children:[]}],p={rightToc:l};function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("hr",null),Object(r.b)("p",null,"Follow this guide to use One Platform Notifications Service in your app."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note:")," This guide shows the steps to using Notifications Service using Email Templates, for Push Notifications and Subscriptions, please refer the ",Object(r.b)("a",{href:"#",title:"WIP",disabled:!0},"Get Started with Notification Subscriptions"),"."),Object(r.b)("h4",{id:"prerequisites"},"Prerequisites"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"An API Key for the One Platform API Gateway. (Please contact the One Platform Admins to get an API Key for your application)")),Object(r.b)("h3",{id:"step-1-create-a-notification-template"},"Step 1: Create a Notification Template"),Object(r.b)("p",null,"Before you can start sending Notifications, you need to create a Template."),Object(r.b)("p",null,"A Template is as the name suggests, a template consisting of the non-dynamic content of a notification, which can be used by multiple notifications of the same type. You can create a different template for each kind of notification that your app uses."),Object(r.b)("p",null,"To create a template, use the following GraphQL mutation on the One Platform API Gateway:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"mutation NewTemplate($template: CreateNotificationTemplate!) {\n  createNotificationTemplate(template: $template) {\n    templateID\n    ... on NotificationTemplate {\n      # ... other fields if required\n    }\n  }\n}\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"$template")," can be passed as a variable of type:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"input CreateNotificationTemplate {\n  name: String!\n  description: String!\n  subject: String!\n  body: String!\n  templateEngine: NotificationTemplateEngineEnum\n  owners: [ID!]!\n  isEnabled: Boolean\n}\nenum NotificationTemplateEngineEnum {\n  TWIG\n  HBS\n  NJK\n}\n")),Object(r.b)("p",null,"If the ",Object(r.b)("inlineCode",{parentName:"p"},"templateEngine")," is null, ",Object(r.b)("inlineCode",{parentName:"p"},"TWIG")," is used as default. (Only TWIG is supported currently, any other template is treated as plain text.)"),Object(r.b)("p",null,"The mutation, on successful execution, returns an object with a ",Object(r.b)("inlineCode",{parentName:"p"},"templateID"),". Make a note of this, or store it in your app, as this will be used in the next step for sending notifications."),Object(r.b)("h3",{id:"step-2-sending-a-notification"},"Step 2: Sending a Notification"),Object(r.b)("p",null,"After a template is created, sending a notification is as simple as calling an API endpoint."),Object(r.b)("p",null,"Using the template we just created in Step 1 ",Object(r.b)("sup",null,Object(r.b)("a",{parentName:"p",href:"#step-1-create-a-notification-template"},"^")),", we can now send a notification using the following GraphQL mutation:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"mutation NewNotification($templateID: ID!, $payload: NotificationPayloadInput!) {\n  triggerNotification(templateID: $templateID, payload: $payload) {\n    ... on TriggerNotification {\n      data\n      priority\n      willRunAt\n    }\n  }\n}\n")),Object(r.b)("p",null,"Here the ",Object(r.b)("inlineCode",{parentName:"p"},"$templateID")," is what we got after creating a new template, and ",Object(r.b)("inlineCode",{parentName:"p"},"$payload")," has the following type:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"input NotificationPayloadInput {\n  to: [RecipientInput!]!\n  cc: [RecipientInput]\n  bcc: [RecipientInput]\n  data: Data\n}\ninput RecipientInput {\n  email: String!\n  preferredName: String\n}\n")),Object(r.b)("p",null,"Here, the ",Object(r.b)("inlineCode",{parentName:"p"},"cc")," and ",Object(r.b)("inlineCode",{parentName:"p"},"bcc")," are optional fields."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note:")," The ",Object(r.b)("inlineCode",{parentName:"p"},"data")," property is a JSON object which can contain the key-value pairs for the variables used in the template (",Object(r.b)("inlineCode",{parentName:"p"},"data")," should be in JSON format, and is only applicable to a TWIG template)."),Object(r.b)("h3",{id:"additional-notes"},"Additional Notes"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"data")," property in ",Object(r.b)("inlineCode",{parentName:"p"},"NotificationPayloadInput")," has some basic validations to check for the first-level variable names."),Object(r.b)("p",null,"i.e. for the following twig template"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-twig"},"Hi {{ user.name }},\n\n{{ message }}\n")),Object(r.b)("p",null,"The mutation checks if ",Object(r.b)("inlineCode",{parentName:"p"},"data")," includes the keys ",Object(r.b)("inlineCode",{parentName:"p"},"user")," and ",Object(r.b)("inlineCode",{parentName:"p"},"message"),", and not the nested property ",Object(r.b)("inlineCode",{parentName:"p"},"user.name"),"."))}s.isMDXComponent=!0},153:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),s=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,m=u["".concat(o,".").concat(d)]||u[d]||b[d]||r;return n?i.a.createElement(m,c(c({ref:t},p),{},{components:n})):i.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<r;p++)o[p]=n[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);
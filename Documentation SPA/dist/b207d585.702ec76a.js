(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{119:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return o})),r.d(t,"default",(function(){return s}));var n=r(2),a=r(6),i=(r(0),r(153)),c={id:"home-service",title:"Home Service",sidebar_label:"Home Service",slug:"/microservices/home-service"},l={unversionedId:"microservices/home/home-service",id:"microservices/home/home-service",isDocsHomePage:!1,title:"Home Service",description:"*",source:"@site/docs/microservices/home/home-service.md",slug:"/microservices/home-service",permalink:"/get-started/docs/microservices/home-service",editUrl:"https://github.com/1-platform/one-platform/edit/master/packages/documentation-spa/docs/microservices/home/home-service.md",version:"current",sidebar_label:"Home Service",sidebar:"someSidebar",previous:{title:"Feedback Service",permalink:"/get-started/docs/microservices/feedback-service"},next:{title:"Lighthouse Service",permalink:"/get-started/docs/microservices/lighthouse-service"}},o=[{value:"Developers",id:"developers",children:[]},{value:"Getting Started",id:"getting-started",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Running a local Development Server",id:"running-a-local-development-server",children:[]},{value:"Server URLs",id:"server-urls",children:[]},{value:"Database mongodb",id:"database-mongodb",children:[]},{value:"Certificate Configuration",id:"certificate-configuration",children:[]},{value:"User-Service API",id:"user-service-api",children:[]},{value:"Apps using this microservice",id:"apps-using-this-microservice",children:[]},{value:"API Reference",id:"api-reference",children:[]},{value:"Target Audience",id:"target-audience",children:[]},{value:"FAQs",id:"faqs",children:[]}],p={rightToc:o};function s(e){var t=e.components,c=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,c,{components:t,mdxType:"MDXLayout"}),Object(i.b)("hr",null),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"This service is being deprecated, and the related APIs will be removed soon. Please see apps-service for the updated APIs.")),Object(i.b)("h2",{id:"developers"},"Developers"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Deepesh Nair - ",Object(i.b)("a",{parentName:"li",href:"mailto:denair@redhat.com"},"denair@redhat.com"))),Object(i.b)("h2",{id:"getting-started"},"Getting Started"),Object(i.b)("p",null,"The Home SPA needs a backend API Service to fetch the SPA/Microservice details and the Apps. This microservice saves any such information about all the SPAs / Microservices which are maintained on the Platform."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The home-service has the following schema (mongoose - mongodb)"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"}," name: String,\n description: String,\n link: String,\n icon: String,\n entityType: String,\n colorScheme: String,\n videoUrl: String,\n owners: [String],\n createdBy: String,\n createdOn: Date,\n updatedBy: String,\n updatedOn: Date,\n active: Boolean\n permissions: [\n     {\n         roverGroup: String,\n         role: {\n             type: String,\n             enum: ['ADMIN', 'USER'],\n             required: true,\n         }\n     }\n ],\n")))),Object(i.b)("h2",{id:"running-a-local-development-server"},"Running a local Development Server"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Clone the entire project from  ",Object(i.b)("a",{parentName:"p",href:"https://github.com/1-platform/one-platform"},"https://github.com/1-platform/one-platform")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-sh"},"git clone git@github.com:1-Platform/one-platform.git\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"You will have to run two servers locally because home-service is dependent on user-server to get User Information. Go to both the respective folders and run both of them locally. Also make sure that you have the necessary environment variables in the ",Object(i.b)("inlineCode",{parentName:"p"},".env")," file")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Environment File example"))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"NAME=local\nNODE_ENV=local\nPRODUCTION=false\n")),Object(i.b)("h2",{id:"server-urls"},"Server URLs"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"API=<https://localhost:8080>\nGRAPHQL_API=<https://localhost:8080/playground>\n")),Object(i.b)("h2",{id:"database-mongodb"},"Database mongodb"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"DB_PATH=localhost\nDB_NAME=one-platform\n")),Object(i.b)("h2",{id:"certificate-configuration"},"Certificate Configuration"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"SSL_KEY=/etc/pki/tls/private/server.key\nSSL_CERT=/etc/pki/tls/certs/server.crt\n")),Object(i.b)("h2",{id:"user-service-api"},"User-Service API"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"USER_SERVICE_SERVICE_HOST=localhost\nUSER_SERVICE_SERVICE_PORT=8083\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Terminal 1"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-sh"},"cd one-platform/packages/user-service/\nPORT=8083 npm run start\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Terminal 2"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-sh"},"cd one-platform/packages/home-service/\nnpm run start\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"You should now be able to access the playground at ",Object(i.b)("a",{parentName:"p",href:"https://localhost:8080/graphql"},"https://localhost:8080/graphql")),Object(i.b)("p",{parentName:"li"},Object(i.b)("img",{alt:"GraphQL Playground",src:r(227).default}))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"To run test keep the user-service running and export the following:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"export DB_PATH=localhost\nexport DB_NAME=test-one-platform\nexport USER_SERVICE_SERVICE_HOST=localhost\nexport USER_SERVICE_SERVICE_PORT=8083\n")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Then run the following:")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-sh"},"npm run test\n")))),Object(i.b)("h2",{id:"apps-using-this-microservice"},"Apps using this microservice"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"SPAs",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Home"),Object(i.b)("li",{parentName:"ul"},"Notifications"),Object(i.b)("li",{parentName:"ul"},"User Profile"))),Object(i.b)("li",{parentName:"ol"},"Microservices",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Notifications-Service")))),Object(i.b)("h2",{id:"api-reference"},"API Reference"),Object(i.b)("p",null,"Following are the APIs that are used in the home-service. Home service internally uses user-service to get user information (createdBy, updated By, Owners)"),Object(i.b)("p",null,"Following are graphql types."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Input and Output for HomeType"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Output")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"type HomeType {\n  _id: String\n  name: String\n  description: String\n  link: String\n  icon: String\n  entityType: String\n  colorScheme: String\n  videoUrl: String\n  owners: [HomeUserType]\n  createdBy: HomeUserType\n  createdOn: DateTime\n  updatedBy: HomeUserType\n  updatedOn: DateTime\n  active: Boolean\n  permissions: [PermissionsType]\n}\n")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Input")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"input HomeInput {\n  _id: String\n  name: String\n  description: String\n  link: String\n  icon: String\n  entityType: String\n  colorScheme: String\n  videoUrl: String\n  owners: [String]\n  createdBy: String\n  createdOn: DateTime\n  updatedBy: String\n  updatedOn: DateTime\n  active: Boolean\n  permissions: [PermissionsInput]\n}\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Types mentioned above:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"type PermissionsType {\n  roverGroup: String\n  role: APIROLE\n}\n")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"enum APIROLE {\n  ADMIN\n  USER\n}\n")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"type HomeUserType {\n  _id: String\n  name: String\n  title: String\n  uid: String\n  rhatUUID: String\n  memberOf: [String]\n  isActive: Boolean\n  apiRole: APIROLE\n  createdBy: String\n  createdOn: DateTime\n  updatedBy: String\n  updatedOn: DateTime\n}\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"To list all the HomeType (.i.e. microservices /SPAs)"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"listHomeType: [HomeType]\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"To get a particular HomeType by $id"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"getHomeType(_id: String!): HomeType\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Get HomeType by any of the HomeType"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"getHomeTypeBy(input: HomeInput): [HomeType]\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Get HomeType by user"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"getHomeTypeByUser(rhuuid: String!): [HomeType]\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Create HomeType"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"createHomeType(input: HomeInput): HomeType\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Update HomeType requires $id field to update the particular HomeType"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"updateHomeType(input: HomeInput): HomeType\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"To remove HomeType -  Required $id to delete the HomeType"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"deleteHomeType(_id: String!): HomeType\n")))),Object(i.b)("h2",{id:"target-audience"},"Target Audience"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"SPA Developers for One Platform")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"SPA Owners for One Platform")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"SPA Users for One Platform"))),Object(i.b)("h2",{id:"faqs"},"FAQs"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"What is home-service?")),Object(i.b)("p",{parentName:"li"},"Home-Service is a microservice which stores information about all SPAs/Microservices which are hosted/deployed on One Platform."))))}s.isMDXComponent=!0},153:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},b=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=s(r),u=n,d=b["".concat(c,".").concat(u)]||b[u]||m[u]||i;return r?a.a.createElement(d,l(l({ref:t},p),{},{components:r})):a.a.createElement(d,l({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,c=new Array(i);c[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var p=2;p<i;p++)c[p]=r[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},227:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/gql-playground-b38442e0f45e3a09e9232096f3df4283.png"}}]);
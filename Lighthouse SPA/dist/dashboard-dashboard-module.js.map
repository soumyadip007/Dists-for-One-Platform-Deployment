{"version":3,"sources":["./src/app/dashboard/dashboard.gql.ts","./src/app/dashboard/pages/dashboard/dashboard.component.html","./src/app/dashboard/pages/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.service.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/components/property-card/property-card.component.ts","./src/app/dashboard/components/property-card/property-card.component.html","./src/app/dashboard/pages/analysis/analysis.component.html","./src/app/dashboard/pages/analysis/analysis.component.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { gql } from 'apollo-angular';\n\nexport const ListLHProperties = gql`\n  query ListLHProperties {\n    listLHProperties {\n      id\n      name\n    }\n  }\n`;\n\nexport const GetLHPropertyById = gql`\n  query GetLHPropertyById($propertyId: ID!) {\n    getLHPropertyById(id: $propertyId) {\n      projectId\n      name\n      apps {\n        id\n        branch\n        name\n      }\n    }\n  }\n`;\n\nexport const ListLHPropertyScores = (\n  projectId: string,\n  apps: PropertyApps[]\n) => {\n  let queryAliasBuilder = '';\n  apps.map(({ branch, id }) => {\n    queryAliasBuilder += `\n    app${id}:listLHProjectBuilds(projectID:$projectId,branch:\"${branch}\",limit:1){\n      id\n      projectId\n      score{\n        pwa\n        accessibility\n        seo\n        bestPractices\n        performance\n      }\n    }\n    `;\n  });\n  return gql`\n  query ListLHPropertyScores($projectId: String!) {\n    ${queryAliasBuilder}\n  }\n  `;\n};\n","<div class=\"pf-l-flex pf-m-column pf-u-p-lg pf-u-h-100 pf-m-nowrap\">\n    <div class=\"pf-l-flex__item pf-m-spacer-lg\">\n        <h1 class=\"pf-c-title pf-m-2xl\">\n            Run lighthouse on internal web properties\n        </h1>\n    </div>\n    <div class=\"pf-l-flex pf-m-grow pf-m-justify-content-center pf-m-align-items-center\" *ngIf=\"loading\">\n        <app-loader title=\"Loading...\">\n        </app-loader>\n    </div>\n    <div class=\"pf-l-flex pf-m-grow pf-m-justify-content-center pf-m-align-items-center\" *ngIf=\"!loading && isEmpty\">\n        <div class=\"pf-c-empty-state pf-m-xs\">\n            <div class=\"pf-c-empty-state__content\">\n                <i class=\"fas fa-cubes pf-c-empty-state__icon\" aria-hidden=\"true\"></i>\n                <h1 class=\"pf-c-title pf-m-md\">\n                    No data found\n                </h1>\n                <div class=\"pf-c-empty-state__body\">\n                    Contact<a href=\"mailto:one-portal-devel@redhat.com\">\n                        one-portal-devel@redhat.com\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"pf-l-grid pf-m-gutter\" *ngIf=\"!(loading && isEmpty)\">\n        <div class=\"pf-l-grid__item pf-m-12-col-on-sm pf-m-6-col-on-md pf-m-4-col-on-lg pf-m-3-col-on-2xl\"\n            *ngFor=\"let property of properties\">\n            <a [routerLink]=\"'./'+property.id\">\n                <app-property-card>\n                    <img src=\"assets/containers.svg\" icon />\n                    <div class=\"pf-l-flex pf-m-align-center\" [title]>\n                        <div class=\"pf-l-flex__item\">\n                            <h1 class=\"pf-c-title pf-m-md pf-u-font-weight-bold\" [title]>{{property.name}}</h1>\n                        </div>\n                        <div class=\"pf-l-flex__item\">\n                            <i class=\"fas fa-arrow-right\"></i>\n                        </div>\n                    </div>\n                </app-property-card>\n            </a>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from 'app/dashboard/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  loading = true;\n  properties: Properties[] = [];\n  isEmpty = false;\n  constructor(private dashboardService: DashboardService) {}\n\n  ngOnInit(): void {\n    this.dashboardService\n      .listLHProperties()\n      .valueChanges.subscribe(({ data, loading }) => {\n        this.loading = loading;\n        this.properties = data.listLHProperties;\n        this.isEmpty = data.listLHProperties.length === 0;\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AnalysisComponent } from './pages/analysis/analysis.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n  },\n  {\n    path: ':id',\n    component: AnalysisComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { GraphQLModule } from 'app/graphql.module';\nimport {\n  ListLHProperties,\n  GetLHPropertyById,\n  ListLHPropertyScores,\n} from './dashboard.gql';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardService extends GraphQLModule {\n  constructor(private apollo: Apollo) {\n    super();\n  }\n\n  listLHProperties() {\n    return this.apollo.watchQuery<{ listLHProperties: Properties[] }>({\n      query: ListLHProperties,\n    });\n  }\n\n  getLHPropertyById(propertyId: string) {\n    return this.apollo.watchQuery<{ getLHPropertyById: Properties }>({\n      query: GetLHPropertyById,\n      variables: {\n        propertyId,\n      },\n    });\n  }\n\n  getLHPropertyScores(projectId: string, apps: PropertyApps[]) {\n    return this.apollo.watchQuery<Record<string, PropertyBuilds[]>>({\n      query: ListLHPropertyScores(projectId, apps),\n      variables: {\n        projectId,\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GraphQLModule } from 'app/graphql.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { PropertyCardComponent } from './components/property-card/property-card.component';\nimport { AnalysisComponent } from './pages/analysis/analysis.component';\n\nimport { SharedModule } from 'app/shared/shared.module';\n\n@NgModule({\n  declarations: [DashboardComponent, PropertyCardComponent, AnalysisComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    GraphQLModule,\n    HttpClientModule,\n    SharedModule,\n  ],\n})\nexport class DashboardModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-property-card',\n  templateUrl: './property-card.component.html',\n  styleUrls: ['./property-card.component.scss']\n})\nexport class PropertyCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card pf-l-flex pf-m-column pf-m-justify-content-center pf-m-align-center pf-u-w-100 pf-u-w-100 pf-u-p-xl\">\n    <div class=\"pf-l-flex__item pf-l-flex pf-m-justify-content-center pf-m-align-center\">\n        <ng-content [icon]></ng-content>\n    </div>\n    <div class=\"pf-l-flex__item pf-u-text-align-center pf-l-flex pf-m-justify-content-center pf-m-align-center\">\n        <ng-content select=\"[title]\"></ng-content>\n    </div>\n</div>\n","<div class=\"pf-l-flex pf-m-column pf-m-nowrap pf-u-p-lg\">\n    <div class=\"pf-l-flex pf-m-grow pf-m-justify-content-center pf-m-align-items-center\" *ngIf=\"appListLoading\">\n        <app-loader title=\"Loading...\">\n        </app-loader>\n    </div>\n    <ng-container *ngIf=\"!appListLoading\">\n        <div class=\"pf-l-flex__item\">\n            <nav class=\"pf-c-breadcrumb\" aria-label=\"breadcrumb\">\n                <ol class=\"pf-c-breadcrumb__list\">\n                    <li class=\"pf-c-breadcrumb__item\">\n                        <span class=\"pf-c-breadcrumb__item-divider\">\n                            <i class=\"fas fa-angle-right\" aria-hidden=\"true\"></i>\n                        </span>\n                        <a routerLink=\"/dashboard\" class=\"pf-c-breadcrumb__link\">Dashboard</a>\n                    </li>\n                    <li class=\"pf-c-breadcrumb__item\">\n                        <span class=\"pf-c-breadcrumb__item-divider\">\n                            <i class=\"fas fa-angle-right\" aria-hidden=\"true\"></i>\n                        </span>\n                        <span class=\"pf-c-breadcrumb__link pf-m-current\" aria-current=\"page\">\n                            {{title}}\n                        </span>\n                    </li>\n                </ol>\n            </nav>\n        </div>\n        <div class=\"pf-l-flex pf-m-grow pf-m-align-items-center pf-m-column pf-u-w-100 pf-u-py-md\">\n            <div id=\"apps-score-card\" class=\"pf-l-flex pf-m-column pf-u-w-75\" *ngFor=\"let app of apps\">\n                <div class=\"pf-l-flex__item pf-c-content\">\n                    <h3 class=\"capitialize\">{{app.name}}</h3>\n                </div>\n                <div class=\"pf-l-flex__item\">\n                    <div class=\"pf-c-card score-card\">\n                        <div class=\"pf-c-card__body\">\n                            <div class=\"pf-l-flex pf-m-nowrap pf-m-justify-content-space-around pf-m-space-items-xl\">\n                                <ng-container *ngIf=\"scoreLoading\">\n                                    <div class=\"pf-u-py-2xl\">\n                                        <app-loader title=\"loading score...\" spinnerClassName=\"pf-m-lg\"\n                                            textClassName=\"pf-m-md\">\n                                        </app-loader>\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf=\"!scoreLoading\">\n                                    <div class=\"pf-l-flex__item\" *ngFor=\"let score of scores[app.id]\">\n                                        <app-outlined-pie-graph score={{score.score}} name={{score.label}}>\n                                        </app-outlined-pie-graph>\n                                    </div>\n                                </ng-container>\n                            </div>\n                            <app-lhcard-legend></app-lhcard-legend>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DashboardService } from 'app/dashboard/dashboard.service';\n\n@Component({\n  selector: 'app-analysis',\n  templateUrl: './analysis.component.html',\n  styleUrls: ['./analysis.component.scss'],\n})\nexport class AnalysisComponent implements OnInit {\n  apps: PropertyApps[] = [];\n  scores: Record<string, CardScore[]> = {};\n  title = '';\n  appListLoading = true;\n  scoreLoading = true;\n  constructor(\n    private route: ActivatedRoute,\n    private dashboardService: DashboardService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      const propertyId = params.id;\n      this.dashboardService\n        .getLHPropertyById(propertyId)\n        .valueChanges.subscribe(({ data, loading }) => {\n          const { apps, projectId, name } = data.getLHPropertyById;\n          this.apps = apps;\n          this.title = name;\n          this.appListLoading = loading;\n          // fetch scores for all apps\n          this.dashboardService\n            .getLHPropertyScores(projectId, apps)\n            .valueChanges.subscribe(({ data, loading }) => {\n              Object.entries(data).map(([id, appLatestBuild]) => {\n                const buildScore = this.getAverageScore(\n                  appLatestBuild[0].score\n                );\n                const originalId = id.slice(3);\n                this.scoreLoading = loading;\n\n                this.scores[originalId] = this.scoreFormater(buildScore);\n              });\n            });\n        });\n    });\n  }\n\n  getAverageScore(scoreList: Score[]) {\n    const totalNumberOfScores = scoreList.length;\n    return scoreList.reduce(\n      (average, score) => {\n        Object.keys(average).map((scoreType) => {\n          average[scoreType] += Math.floor(\n            (score[scoreType] / totalNumberOfScores) * 100\n          );\n        });\n        return average;\n      },\n      {\n        pwa: 0,\n        accessibility: 0,\n        seo: 0,\n        bestPractices: 0,\n        performance: 0,\n      }\n    );\n  }\n\n  scoreFormater(score: Score): CardScore[] {\n    const formatedScores: CardScore[] = [\n      {\n        label: 'Performance',\n        name: 'performance',\n        score: 0,\n      },\n      {\n        label: 'Accessibility',\n        name: 'accessibility',\n        score: 0,\n      },\n      {\n        label: 'Best Practices',\n        name: 'bestPractices',\n        score: 0,\n      },\n      {\n        label: 'SEO',\n        name: 'seo',\n        score: 0,\n      },\n      {\n        label: 'PWA',\n        name: 'pwa',\n        score: 0,\n      },\n    ];\n    return formatedScores.map((formatedScore) => {\n      formatedScore.score = score[formatedScore.name];\n      return formatedScore;\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}